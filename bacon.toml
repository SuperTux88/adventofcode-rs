# This is a configuration file for the bacon tool
#
# Bacon repository: https://github.com/Canop/bacon
# Complete help on configuration: https://dystroy.org/bacon/config/
# You can also check bacon's own bacon.toml file
#  as an example: https://github.com/Canop/bacon/blob/main/bacon.toml

default_job = "test"

[jobs.check-all]
command = ["cargo", "check", "--all-targets", "--color", "always"]
need_stdout = false

[jobs.clippy]
command = [
    "cargo", "clippy",
    "--all-targets",
    "--color", "always",
]
need_stdout = false

# This job lets you run
# - all tests: bacon test
# - a specific test: bacon test -- config::test_default_files
# - the tests of a package: bacon test -- -- -p config
[jobs.test]
command = [
    "cargo", "test", "--color", "always",
    "--", "--color", "always", # see https://github.com/Canop/bacon/issues/124
]
need_stdout = true

# You can run your application and have the result displayed in bacon,
# *if* it makes sense for this crate. You can run an example the same
# way. Don't forget the `--color always` part or the errors won't be
# properly parsed.
[jobs.run]
command = [
    "cargo", "run",
    "--color", "always",
    # put launch parameters for your program behind a `--` separator
    "--", "run",
]
need_stdout = true
allow_warnings = true

[jobs.run-release]
command = [
    "cargo", "run",
    "--color", "always",
    "--release",
    # put launch parameters for your program behind a `--` separator
    "--", "run",
]

[jobs.bench]
command = [
    "cargo", "run",
    "--color", "always",
    # put launch parameters for your program behind a `--` separator
    "--", "bench",
]
need_stdout = true
allow_warnings = true

[jobs.bench-release]
command = [
    "cargo", "run",
    "--color", "always",
    "--release",
    # put launch parameters for your program behind a `--` separator
    "--", "bench",
]
need_stdout = true
allow_warnings = true

[jobs.run-criterion]
command = [
    "cargo", "bench",
    "--color", "always",
    "--bench", "solutions",
]
need_stdout = true
allow_warnings = true

# You may define here keybindings that would be specific to
# a project, for example a shortcut to launch a specific job.
# Shortcuts to internal functions (scrolling, toggling, etc.)
# should go in your personal global prefs.toml file instead.
[keybindings]
d = "job:default"

alt-r = "job:run-release"

alt-b = "job:bench"
ctrl-alt-b = "job:bench-release"

alt-c = "job:criterion"
